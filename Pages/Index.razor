@page "/"
@using System.IO;

<body>
  <div style="margin-left:-2rem; width:120%; height:40px; background-color:blue">
    <button style="margin-left: 2rem; margin-top: 0.4rem">New</button>
      <input type="text" @bind="url"/>
    <button style="margin-left: 0rem; margin-top: 0.4rem">Submit</button>
    <button @onclick="urlsubmit" style="margin-left: 0rem; margin-top: 0.4rem">Save</button>
    <button style="margin-left: 0rem; margin-top: 0.4rem">Print</button>
  </div>
  <iframe bind="@newPage.page" id="page id" styles="width:50%; height:100%"></iframe>
  <iframe styles="width:50%; height:100%"></iframe>
</body>

@code{
  public Page newPage {get; set;}
  string url { get; set; }
  void urlsubmit()
  {

    if (url == null)
      return;

    url = verifystring(url);

    if (url == null)
      return;

    newPage = new Page(url);
    /*
    using (MemoryStream htmlSource = new MemoryStream(System.Text.Encoding.ASCII.GetBytes(newPage.page)))
    using (MemoryStream pdfDest = new MemoryStream())
    {
      ConverterProperties converterProperties = new ConverterProperties();
      HtmlConverter.ConvertToPdf(htmlSource, pdfDest, converterProperties);
    }*/
  }
  private string? verifystring(string url)
  {
    if (url.StartsWith("view-source:"))
      url = url.Remove(0, 11);
    Uri uriResult;
    bool result = Uri.TryCreate(url, UriKind.Absolute, out uriResult)
        && (uriResult.Scheme == Uri.UriSchemeHttp || uriResult.Scheme == Uri.UriSchemeHttps);
    if (!result)
      return null;
    else
      return url;
  }


}
